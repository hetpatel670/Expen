workflows:
  android-release-build:
    name: "Android Release Build"
    max_build_duration: 60

    environment:
      groups:
        - android_signing
      vars:
        PACKAGE_NAME: "com.budgetwisebare"

    scripts:
      - name: "Clean and install dependencies"
        script: |
          rm -rf node_modules android/.gradle android/build
          npm install
          cd android
          chmod +x ./gradlew
          ./gradlew clean
          cd ..

      - name: "Log react-native config output"
        script: |
          npx react-native config > config-output.json
          cat config-output.json

      - name: "Override react-native config globally"
        script: |
          mkdir -p node_modules/.bin
          echo '#!/bin/bash' > node_modules/.bin/react-native
          echo 'if [[ "$1" == "config" ]]; then cat ./config-output.json; else npx react-native "$@"; fi' >> node_modules/.bin/react-native
          chmod +x node_modules/.bin/react-native
          export PATH=$(pwd)/node_modules/.bin:$PATH

      - name: "Generate autolinking.json via Gradle (with fallback)"
        script: |
          cd android
          chmod +x ./gradlew
          ./gradlew generateAutolinkingFileRelease || true
          cd ..
          mkdir -p android/build/generated/autolinking
          if [ ! -f android/build/generated/autolinking/autolinking.json ]; then
            echo '{
              "modules": [],
              "targets": []
            }' > android/build/generated/autolinking/autolinking.json
          fi

      - name: "Build Android release APK"
        script: |
          export PATH=$(pwd)/node_modules/.bin:$PATH
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease

    artifacts:
      - config-output.json
      - android/app/build/outputs/apk/release/*.apk
